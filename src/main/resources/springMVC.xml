<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context      
                    http://www.springframework.org/schema/context/spring-context.xsd
                    http://www.springframework.org/schema/mvc     
                    http://www.springframework.org/schema/mvc/spring-mvc.xsd
                    http://www.springframework.org/schema/aop 
                    http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- 注解请求映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<list>
				<bean class="com.interceptors.LogInterceptors" />   <!-- 日志拦截器，这是你自定义的拦截器 -->
			</list> 
		</property>
	</bean>
	<!--<bean id="byteArray_hmc" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" /> 处理byteArray.. -->
	<!-- 处理字符串.. -->
	<bean id="string_hmc"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/x-www-form-urlencoded;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 处理json -->
	<bean id="fastjson_hmc"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="charset" value="UTF-8"></property>
		<property name="features">
			<list>
				<value>WriteNonStringKeyAsString</value>
				<value>WriteMapNullValue</value>
				<value>WriteDateUseDateFormat</value>
				<value>WriteNullBooleanAsFalse</value>
				<value>WriteNullListAsEmpty</value>
				<value>WriteNullNumberAsZero</value>
				<value>WriteNullStringAsEmpty</value>
				<value>SkipTransientField</value>
				<value>QuoteFieldNames</value>
			</list>
		</property>
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/x-www-form-urlencoded;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list><!-- <ref bean="byteArray_hmc" /> -->
				<ref bean="string_hmc" />
				<ref bean="fastjson_hmc" />
			</list>
		</property>
	</bean>

	<!-- 全局异常配置 start -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 表示当抛出NumberFormatException的时候就返回名叫number的视图 -->
				<prop key="java.lang.Exception">404.html</prop>
				<prop key="java.lang.Throwable">500.html</prop>
			</props>
		</property>
		<!-- 表示当抛出异常但没有在exceptionMappings里面找到对应的异常时 返回名叫exception的视图 -->
		<property name="defaultErrorView" value="500.html" />
		<!-- 设置日志输出warnLogCategory的对象WARN -->
		<property name="warnLogCategory" value="WARN" />
		<!-- 定义在发生异常时视图跟返回码的对应关系 -->
		<property name="statusCodes">
			<props>
				<!-- 表示在发生NumberFormatException时返回视图number，然后这里定义发生异常时视图number对应的HttpServletResponse的返回码是500 -->
				<prop key="java.lang.Exception">404</prop>
				<prop key="java.lang.Throwable">500</prop>
			</props>
		</property>
		<!-- 表示在发生异常时默认的HttpServletResponse的返回码是多少，默认是200 -->
		<property name="defaultStatusCode" value="404" />
	</bean>
	<!-- 全局异常配置 end -->
	<!-- 启动组件扫描，只包含@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:annotation-driven />

	<!-- 文件上传配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760000" />
		<property name="maxInMemorySize" value="40960" />
	</bean>

 
	<!-- 静态资源访问配置 -->
	<mvc:resources location="/images/" mapping="/images/**" />
	<mvc:resources location="/data/" mapping="/data/**" />
	<mvc:resources location="/static/" mapping="/static/**" />
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	<!-- Freemarker配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
		<property name="templateLoaderPath" value="/WEB-INF/view/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>
	<!--freemarker视图解释器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">

		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="suffix" value=".html"></property>
		<property name="contentType" value="text/html;charset=UTF-8"></property>
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="cache" value="true" />
		<property name="order" value="0" />
	</bean>
	<!--jsp视图解释器 -->
	<bean id="jspResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="300" />
		<property name="maxTotal" value="600" />
		<property name="maxWaitMillis" value="1000" />
		<property name="testOnBorrow" value="true" />
    </bean>   
 	
	<!-- 启动对@AspectJ（面向切面）注解的支持 -->
	<aop:aspectj-autoproxy proxy-target-class="false" />
	
    <!-- redis的连接池pool，不是必选项：timeout/password -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="127.0.0.1" />
        <constructor-arg index="2" value="6379" type="int" />
        <constructor-arg index="3" value="60000" type="int" />
    </bean>
	
	 <!-- 切面 -->
	 <bean id="jedisUtil" class="com.cacheAop.JedisUtil" scope="singleton">
	 	<property name="jedisPool" ref="jedisPool" ></property>
	 </bean>
	 <bean id="redisCacheBean" class="com.cacheAop.RedisCacheBean" scope="singleton">
	 	<property name="jedisUtil" ref="jedisUtil"></property>
	 </bean>
	  <bean id="cacheableAop" class="com.cacheAop.CacheableAop" scope="singleton">
	  	<property name="redis" ref="redisCacheBean"></property>
	  </bean>

  <!-- 切入点 -->
  <aop:config>
    <aop:aspect id="asp1" ref="cacheableAop">
      	<aop:around method="cached" pointcut="@annotation(com.cacheAop.Cacheable)" />
      	<aop:around method="evict" pointcut="@annotation(com.cacheAop.CacheEvict)" />
    </aop:aspect>
  </aop:config>
	
</beans>
